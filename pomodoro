#!/bin/bash

INFO="
Print the time left until the next break.

    pomodoro --print
"

BREAK_DURATION=300
WORK_DURATION=1500

PATH_STATUS_FILE="/tmp/pomodoro.$UID.status"

function not_synced_print {
    local cur_time="$1"
    local last_activity="$2"

    if [ ! -e "$PATH_STATUS_FILE" ]; then
        echo "$last_activity:$last_activity" \
            > "$PATH_STATUS_FILE" || return 1
    fi

    IFS=':' read work_start work_end \
        < "$PATH_STATUS_FILE" || return 1

    local extend_work=$(($last_activity - $work_end))
    if [ "$extend_work" -ge "$BREAK_DURATION" ]; then
        work_start=$last_activity
    fi
    if [ "$extend_work" -ge 11 ]; then
        work_end=$last_activity
    fi

    echo "$work_start:$work_end" \
        > "$PATH_STATUS_FILE" || return 1

    local idle_time=$(($cur_time - $work_end))
    if [ "$idle_time" -ge "$BREAK_DURATION"  ]; then
        echo "$((($WORK_DURATION+30)/60))m"
        return 0
    fi

    local since_work_start=$(($cur_time - $work_start))
    if [ "$since_work_start" -lt "$WORK_DURATION" ]; then
        echo "$(((($WORK_DURATION-$since_work_start)+30)/60))m"
        return 0
    fi

    echo "0m"
}

function run_sync {
    ( flock -x 9 && "$@" ) 9> "/tmp/takeabreakd.$UID.lock"
    return $?
}

if [ "x$1" = x--print ]; then
    CUR_TIME=$(date +'%s') || exit 1
    CUR_IDLE=$(xinfo i) || exit 1
    LAST_ACT=$(($CUR_TIME - $CUR_IDLE))
    run_sync not_synced_print "$CUR_TIME" "$LAST_ACT" || exit 1
    exit 0
fi

echo "$INFO" 1>&2
exit 1
