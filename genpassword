#!/bin/bash

INFO="
Generate strong passwords from a single initial passphase.

Usage:
    genpassword <seed>
    genpassword --gui
"

if [ -z "$1" ]; then
    echo "$INFO" 1>&2
    exit 1
fi

cd || exit 1

function genpasswd {
    [ "x$1" != "x" ] || return 1
    local salt=$(cat .salt) || return 1
    if [ ${#salt} == 64 ]; then
        local passwd=$(echo -n "$salt:$1" | sha256sum) || return 1
        passwd=$(echo "$passwd" | xxd -ps -r | base64) || return 1
        passwd=$(echo "$passwd" | cut -b "1-16") || return 1
        echo "$passwd"
        return 0
    else
        echo "Error: '~/.salt' file is invalid" 1>&2
        return 1
    fi
}

if [ "x$1" == x--gui ]; then
    if [ ! -e .salt ]; then
        MAST=$(zenity --entry \
            --title "Master passphrase" \
            --text "Enter a strong passphrase to initialize the password generator.\n\nPassphrase:") || exit 1
        if [ ${#MAST} -ge 48 ]; then
            SALT=$(echo -n "$MAST" | sha256sum | cut -d ' ' -f 1) || exit 1
            echo "$SALT" > .salt || exit 1
        else
            zenity --error --title "Error" \
                --text "Error: Entered passphrase is ${#MAST} characters long (must be at least 48)"
            exit 1
        fi
    fi
    randmelody $(cat .salt) &
    SEED=$(zenity --entry \
        --title "Generate a password" \
        --text "The generated password will be copied to clipboard.\n\nPassword seed:") || exit 1
    if PASS=$(genpasswd "$SEED" 2>&1); then
        (setsid bash -c "echo -n '$PASS' | xclip -selection clipboard" &)
    else
        zenity --error --title "Error" --text "$PASS"
        exit 1
    fi
else
    if [ ! -e .salt ]; then
        echo "Error: '~/.salt' file does not exist" 1>&2
        return 1
    fi
    genpasswd "$1" || exit 1
fi
