#!/usr/bin/env python3

import os
import sys
import time
import numpy as np

def print_help():
    sys.stdout.write("\n"
        + "Plot a CSV file with multiple columns.\n\n"
        + "Usage:\n\tplot-csv <file1.csv> [ ... ]\n\n")

def plot_csv(*csv_files):
    plot_file = _getenv("PLOT_FILE")

    import matplotlib
    if plot_file is not None:
        matplotlib.use('Agg')
    import matplotlib.pyplot as plt
    import matplotlib.cm

    file_data = []
    for f in csv_files:
        try:
            data = np.genfromtxt(f, names=True)
            assert data.size >= 2
            assert len(data.dtype.names) >= 1
            file_data.append(data)
        except:
            sys.stderr.write("Warning: could not read '%s'" % f)
    assert len(file_data) >= 1
    cols = [c for c in file_data[0].dtype.names
        if not np.isnan(np.sum(file_data[0][c]))]
    if len(cols) < 2:
        cols = [""] + cols

    fig, axes = plt.subplots(nrows=len(cols)-1)
    fig.tight_layout()
    if not hasattr(axes, "__iter__"):
        axes = [axes]
    axes[-1].set_xlabel(cols[0])
    for col, ax in zip(cols[1:], axes):
        ax.set_ylabel(col)
        ax.grid()

    labels = list(map(os.path.basename, csv_files))
    if len(set(labels)) < len(csv_files):
        labels = ["/".join(n.split("/")[-2:]) for n in csv_files]

    for file_name, data, label in zip(csv_files, file_data, labels):
        xs = np.arange(len(data))+1 if cols[0] == "" else data[cols[0]]
        for col, ax in zip(cols[1:], axes):
            _add_plot(ax, xs, data[col], label)

    for ax in axes:
        ylim = ax.get_ylim()
        ax.set_ylim([min(0.0, ylim[0]), max(0.0, ylim[1])])

    plt.legend(loc=3)

    if plot_file is None:
        plt.show()
    else:
        fig.set_size_inches(10, 8)
        fig.savefig(plot_file, dpi=100)

def _running_mean(data, window):
    sums = np.cumsum(data, 0)
    return (sums[window:] - sums[:-window]) / window

def _add_plot(ax, x, y, label):
    xy = np.array(list(sorted(zip(x, y))))
    color = None
    if len(xy) >= 200:
        color = ax.plot(xy[:,0], xy[:,1], ".",
            alpha=0.2, zorder=1)[0].get_color()
        xy = _running_mean(xy, 100)
    ax.plot(xy[:,0], xy[:,1], "w-", linewidth=4, zorder=2)
    ax.plot(xy[:,0], xy[:,1], "-", label=label,
        color=color, linewidth=2, zorder=3)

def _getenv(name):
    if name in os.environ and len(os.environ[name]) >= 1:
        return os.environ[name]
    return None

def run():
    if len(sys.argv) >= 2:
        plot_csv(*sys.argv[1:])
    else:
        print_help()

if __name__ == "__main__":
    run()
